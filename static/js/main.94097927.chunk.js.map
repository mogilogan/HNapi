{"version":3,"sources":["PostCard.js","PostPage.js","App.js","reportWebVitals.js","index.js"],"names":["PostCard","_ref","post","card","react_default","a","createElement","Fragment","CardContent","Typography","style","color","variant","component","title","sx","mb","author","points","objectID","CardActions","Button","backgroundColor","onClick","window","open","concat","url","Box","pt","minWidth","Card","BlueTextTypography","withStyles","root","Postpage","_useState","useState","_useState2","Object","slicedToArray","posts","setposts","_useState3","_useState4","isLoading","setisLoading","_useState5","_useState6","query","setquery","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_yield$axios$get","data","hits","wrap","_context","prev","next","axios","get","sent","console","log","t0","finish","stop","apply","this","arguments","fetchData","Grid","container","direction","alignItems","justify","TextField","inputProps","fontSize","width","InputLabelProps","type","name","label","value","onChange","e","preventDefault","target","handleOnChange","className","map","src_PostCard","key","App","PostPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.94097927.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card,Box, CardContent, Typography, CardActions, Button} from \"@material-ui/core\";\r\n\r\nconst PostCard = ({post}) => {\r\n\r\n\r\n    const card = (\r\n        <React.Fragment>\r\n            <CardContent>\r\n                <Typography style={{color:\"#D2691E\"}} variant=\"h5\" component=\"div\">{post.title}</Typography>\r\n                <Typography style={{color:\"#FFDAB9\"}} sx={{ mb: 1.5 }} color=\"text.secondary\">Author: {post.author}</Typography>\r\n                <Typography  style={{color:\"#FFDAB9\"}} sx={{ mb: 1.5 }} color=\"text.primary\">Points: {post.points}</Typography>\r\n                <Typography  style={{color:\"#FFC0CB\"}} variant=\"h6\" component=\"div\">{post.objectID}</Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button style={{ 'backgroundColor': '#D3D3D3'}} onClick={()=> window.open(`${[post.url]}`, \"_blank\")}>Learn more</Button>\r\n            </CardActions>\r\n        </React.Fragment>\r\n    )\r\n\r\n    if(!post.title) return null;\r\n    \r\n    return(\r\n        <Box pt={3} sx={{ minWidth: 275 }}>\r\n      <Card style={{backgroundColor: \"#228B22\"}} variant=\"outlined\">{card}</Card>\r\n    </Box>\r\n    )\r\n\r\n};\r\n\r\nexport default PostCard;","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport PostCard from './PostCard.js';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst BlueTextTypography = withStyles({\r\n    root: {\r\n      color: \"#00008B\",\r\n      \r\n    }\r\n  })(Typography);\r\n\r\nconst Postpage = ()=>{\r\n\r\n\r\n    // declaring state hooks\r\n    const [posts,setposts]= useState([]);\r\n    const [isLoading, setisLoading] = useState(true);\r\n    const[query,setquery]=useState(\"\");\r\n\r\n\r\n\r\n    // fetching and handling data\r\n    useEffect(()=>{\r\n        setisLoading(true);\r\n        const fetchData = async()=>{\r\n            try{\r\n                const url=`https://hn.algolia.com/api/v1/search?query=${query}`;\r\n                const {data} =  await axios.get(url);\r\n                const {hits} = data;\r\n                setposts(hits);\r\n                console.log(data);\r\n             \r\n            \r\n            } catch(err){\r\n                console.log(err);\r\n              } finally{\r\n                setisLoading(false);\r\n                }\r\n        };\r\n        fetchData();\r\n    },[query])\r\n    \r\n    \r\n    const handleOnChange = (e) => {\r\n        e.preventDefault()\r\n        setquery(e.target.value)\r\n        }\r\n      \r\n        \r\n    return (\r\n        <div>\r\n           <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n            <BlueTextTypography variant=\"h3\" >Hacker News</BlueTextTypography>\r\n\r\n            <TextField \r\n            inputProps={{style: {fontSize: 20}}} \r\n            style ={{width: '60%'}} \r\n            InputLabelProps={{style: {fontSize: 20 ,color: \"#FFFAF0\"}}} \r\n            \r\n            type=\"text\" \r\n            justify=\"center\" \r\n            name=\"title\" \r\n            variant=\"outlined\" \r\n            label=\"Search News\" \r\n            value={query.query} \r\n            onChange={(e) => handleOnChange(e)} \r\n            />\r\n            </Grid>\r\n            \r\n            <div className=\"Post-Container\">\r\n                {\r\n                isLoading ? <p>Loading....</p> : posts.map((post) => (\r\n                    <Grid>\r\n                        <PostCard post={post} key={post.objectID}  />\r\n                    </Grid>\r\n                                     ))\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Postpage;","import React from 'react';\r\nimport Postpage from './PostPage.js';\r\n\r\nfunction App() {\r\n \r\n    return (\r\n       <Postpage />\r\n      \r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    \r\n\t\t\t<App/>\r\n\t\t\r\n  </React.StrictMode>\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}